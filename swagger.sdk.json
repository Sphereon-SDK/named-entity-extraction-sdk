{
  "basePath": "/extraction/name/entity/0.1",
  "paths": {
    "/extraction/name/entity/jobs/{jobid}": {
      "get": {
        "summary": "Job definition and state",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get the name entity extraction job definition and current state. Please note that you can differentiate based on http response status.",
        "operationId": "getJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/Job"},
            "description": "Job"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Job not found"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["NamedEntityExtraction"]
      },
      "delete": {
        "summary": "Delete a job manually",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete the job and all related files.",
        "operationId": "deleteJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/Job"},
            "description": "Job deleted"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Job failed to delete"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Job was already deleted or unknown job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["NamedEntityExtraction"]
      },
      "put": {
        "summary": "Submit name entity extraction job for processing",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Start name entity extraction. The extraction is done on the previously texts. The settings supplied with the job in the request body are used for the name entity extraction. You can only submit the job after a new Job is created with status INPUTS_UPLOADED or resubmit an existing Job with status ERROR. In all cases the job Id in the path must match the jobId in the request.",
        "operationId": "submitJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/Job"},
            "description": "Splitting started. The job will be returned in the body."
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Splitting request could not be processed"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id. No response body is supplied"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "jobid",
            "description": "jobid",
            "type": "string",
            "required": true
          },
          {
            "schema": {"$ref": "#/definitions/JobSettings"},
            "in": "body",
            "name": "settings",
            "description": "settings",
            "required": true
          }
        ],
        "tags": ["NamedEntityExtraction"],
        "consumes": ["application/json"]
      }
    },
    "/extraction/name/entity/jobs/{jobid}/streams/text": {"post": {
      "summary": "Upload text",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload text for name entity extraction. Name entity extraction will start after submitting the job.",
      "operationId": "addInputText",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/Job"},
          "description": "Upload text for extraction. The job will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Text could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        },
        {
          "schema": {"$ref": "#/definitions/TextInput"},
          "in": "body",
          "name": "textInput",
          "description": "textInput",
          "required": true
        }
      ],
      "tags": ["NamedEntityExtraction"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/extraction/name/entity/jobs": {"post": {
      "summary": "Create a name entity extraction job",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Create a name entity extraction job with settings. For optional settings defaults will be used",
      "operationId": "createJob",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/Job"},
          "description": "Job"
        },
        "201": {
          "schema": {"$ref": "#/definitions/Job"},
          "description": "Created"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job settings"
        }
      },
      "parameters": [{
        "schema": {"$ref": "#/definitions/JobSettings"},
        "in": "body",
        "name": "jobSettings",
        "description": "jobSettings",
        "required": true
      }],
      "tags": ["NamedEntityExtraction"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/extraction/name/entity/jobs/{jobid}/result": {"get": {
      "summary": "Get the extraction results",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Get the name entities that are extracted from the text. The name entity extraction response contains a list of name entities for each text. For each name entity the weight is given with other text statistics.",
      "operationId": "getResult",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/NamedEntityExtractionResponse"},
          "description": "Result successfully created and returned"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Result could not be created."
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id. No response body is supplied"
        }
      },
      "parameters": [{
        "in": "path",
        "name": "jobid",
        "description": "jobid",
        "type": "string",
        "required": true
      }],
      "tags": ["NamedEntityExtraction"]
    }}
  },
  "host": "gw-dev.api.cloud.sphereon.com",
  "schemes": ["https"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://gw-dev.api.cloud.sphereon.com/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "NamedEntity": {
      "description": "Name entity",
      "type": "object",
      "title": "NamedEntity",
      "properties": {
        "sentence": {
          "xml": {
            "name": "sentence",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The sentence from which the name entity is extracted",
          "type": "string"
        },
        "prob": {
          "xml": {
            "name": "prob",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "format": "double",
          "description": "The probability that the entity is a name entity",
          "type": "number"
        },
        "type": {
          "xml": {
            "name": "type",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The type of name entity",
          "type": "string"
        },
        "entity": {
          "xml": {
            "name": "entity",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The name entity that is extracted",
          "type": "string"
        }
      }
    },
    "JobSettings": {
      "description": "Job settings",
      "type": "object",
      "title": "JobSettings",
      "required": ["engine"],
      "properties": {"engine": {
        "xml": {
          "name": "engine",
          "attribute": false,
          "wrapped": false
        },
        "allowEmptyValue": false,
        "description": "The engine defines the quality that will be used to process the job",
        "type": "string",
        "enum": ["BASIC"]
      }}
    },
    "NamedEntityList": {
      "description": "Name entity list of name entities extracted from text",
      "type": "object",
      "title": "NamedEntityList",
      "properties": {"namedEntities": {
        "xml": {
          "name": "namedEntities",
          "attribute": false,
          "wrapped": false
        },
        "allowEmptyValue": false,
        "description": "The name entities that are extracted",
        "readOnly": true,
        "type": "array",
        "items": {"$ref": "#/definitions/NamedEntity"}
      }}
    },
    "Error": {
      "description": "An error",
      "type": "object",
      "title": "Error",
      "required": [
        "code",
        "level",
        "message"
      ],
      "properties": {
        "code": {
          "xml": {
            "name": "code",
            "attribute": false,
            "wrapped": false
          },
          "type": "string"
        },
        "level": {
          "xml": {
            "name": "level",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "FATAL"
          ]
        },
        "cause": {
          "xml": {
            "name": "cause",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "$ref": "#/definitions/Error"
        },
        "message": {
          "xml": {
            "name": "message",
            "attribute": false,
            "wrapped": false
          },
          "type": "string"
        }
      }
    },
    "Job": {
      "description": "Extraction Job",
      "type": "object",
      "title": "Job",
      "required": [
        "jobSettings",
        "state"
      ],
      "properties": {
        "completionTime": {
          "xml": {
            "name": "completionTime",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "format": "date-time",
          "description": "The completion date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "jobId": {"type": "string"},
        "creationTime": {
          "xml": {
            "name": "creationTime",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "inputs": {
          "xml": {
            "name": "inputs",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The input entries",
          "type": "array",
          "items": {"$ref": "#/definitions/InputEntry"}
        },
        "jobSettings": {
          "xml": {
            "name": "jobSettings",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "$ref": "#/definitions/JobSettings"
        },
        "updateTime": {
          "xml": {
            "name": "updateTime",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "xml": {
            "name": "state",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The status of the job",
          "readOnly": true,
          "type": "string",
          "enum": [
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        },
        "queueTime": {
          "xml": {
            "name": "queueTime",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "format": "date-time",
          "description": "The queue date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TextInput": {
      "description": "Text input",
      "type": "object",
      "title": "TextInput",
      "properties": {"text": {
        "xml": {
          "name": "text",
          "attribute": false,
          "wrapped": false
        },
        "allowEmptyValue": false,
        "description": "The text input for extraction.",
        "type": "string"
      }}
    },
    "ErrorResponse": {
      "description": "The error response",
      "type": "object",
      "title": "ErrorResponse",
      "properties": {"errors": {
        "xml": {
          "name": "errors",
          "attribute": false,
          "wrapped": false
        },
        "allowEmptyValue": false,
        "type": "array",
        "items": {"$ref": "#/definitions/Error"}
      }}
    },
    "InputEntry": {
      "description": "Input entry",
      "type": "object",
      "title": "InputEntry",
      "properties": {
        "textInput": {
          "xml": {
            "name": "textInput",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The text input for a job.",
          "$ref": "#/definitions/TextInput"
        },
        "id": {
          "xml": {
            "name": "id",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The id of the input for a job.",
          "type": "string"
        }
      }
    },
    "NamedEntityExtractionResponse": {
      "description": "Name entity extraction response for a job",
      "type": "object",
      "title": "NamedEntityExtractionResponse",
      "properties": {
        "jobId": {
          "xml": {
            "name": "jobId",
            "attribute": false,
            "wrapped": false
          },
          "type": "string"
        },
        "namedEntities": {
          "xml": {
            "name": "namedEntities",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The name entities that are extracted for each input",
          "readOnly": true,
          "additionalProperties": {"$ref": "#/definitions/NamedEntityList"},
          "type": "object"
        },
        "job": {
          "xml": {
            "name": "job",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The extraction job",
          "readOnly": true,
          "$ref": "#/definitions/Job"
        },
        "errors": {
          "xml": {
            "name": "errors",
            "attribute": false,
            "wrapped": false
          },
          "allowEmptyValue": false,
          "description": "The errors that occurred",
          "readOnly": true,
          "type": "array",
          "items": {"type": "string"}
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "description": "The Name Entity Extraction API allows you to extract name entities from text. Name entities can be extracted from text, file or stream location. With each extracted name entity a type of entity and a probability will be given.\r\n\r\nThe flow is generally as follows:\r\n1. Create an extraction job. If no settings are provided, default settings are used.\r\n2. Upload content for extraction.\r\n3. Start the extraction job.\r\n3. Get the result when the extraction is completed.\r\n\r\nFull API Documentation: https://docs.sphereon.com/api/extraction/name/entity/0.1/html\r\nInteractive testing: A web based test console is available in the Sphereon API Store at https://store.sphereon.com",
    "termsOfService": "https://sphereon.com",
    "title": "Name Entity Extraction",
    "version": "0.1"
  },
  "tags": [{
    "name": "NamedEntityExtraction",
    "description": "Name entity extraction related API's"
  }]
}